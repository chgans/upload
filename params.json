{
  "name": "Upload",
  "tagline": "HTML5 Upload library with django backend and image manipulation tools",
  "body": "HTML5 upload with photo rotate/crop tools and Django backend\r\n============================================================\r\n\r\n.. image:: https://travis-ci.org/fmalina/upload.svg?branch=master\r\n    :target: https://travis-ci.org/fmalina/upload\r\n\r\nA reusable Django app to work with photo and file uploads.\r\n\r\n- contains native JavaScript multifile drag and drop upload UI with instant thumbnails and progress bars, see upload/static/upload.js\r\n- python/PIL backend for upload, cropping and rotation of photos\r\n- seamless integration into Django projects\r\n- image cropping UI (uses jQuery)\r\n\r\nThumbnails are generated using python PIL/Pillow using easy-thumbnails or compatible thumbnailing application such as sorl-thumbnails.\r\n\r\nUploaded files are grouped into collections, the collection model is swappable via settings, so uploaded files can be grouped to a Page, Gallery or RealityListing.\r\n\r\nupload.js builds on the following HTML5 demos:\r\nhttp://html5demos.com/dnd-upload\r\nhttp://html5demos.com/file-api\r\nupload.js uses the W3C File API. Repository contains backup of examples for article that initially inspired the development\r\nhttps://dev.opera.com/articles/w3c-file-api/\r\n\r\nInstallation (into a Django project)\r\n------------------------------------\r\n\r\nTo get the latest version from GitHub\r\n\r\n::\r\n\r\n    pip install -e git+git://github.com/fmalina/upload.git#egg=upload\r\n\r\nAdd ``upload`` to your ``INSTALLED_APPS``\r\n\r\n::\r\n\r\n    INSTALLED_APPS = (\r\n        ...,\r\n        'upload',\r\n    )\r\n\r\nConfigure your settings to suit, see upload/app_settings.py.\r\nYou can use the collection model provided or plug your own using\r\nsettings.py:\r\n\r\n::\r\n\r\n    UPLOAD['collection_model'] = 'yourcastleapp.Castle'\r\n\r\nAdd the ``upload`` URLs to your ``urls.py``\r\n\r\n::\r\n\r\n    urlpatterns = [\r\n        ...\r\n        url('', include('upload.urls')),\r\n    ]\r\n\r\nCreate your tables\r\n\r\n::\r\n\r\n    ./manage.py migrate upload\r\n\r\n\r\nUsage\r\n-----\r\nSetup a collection\r\n~~~~~~~~~~~~~~~~~~\r\nThis app supports multiple collections (or your custom model) with\r\nmultiple files in each collection.\r\n\r\nAdd files\r\n~~~~~~~~~\r\nDrag and drop upload photos and files into your application.\r\nFiles can have alternative description and are orderable (TODO, jQuery UI demo).\r\n\r\nRemarks\r\n-------\r\nUpload shines best for sites that need user uploaded photo galleries.\r\n\r\nIt will automatically shard the storage folder so as to not hit ext3 subfolder limit (~32000 folders).\r\n\r\nIncluded is also a backup management tool to sync/download publicly uploaded files from server to a local machine.\r\n\r\nPlanned features\r\n----------------\r\nCurrent storage layout presumes collections to be related to users, which will be addressed in the next update.\r\n\r\nContribute\r\n----------\r\nFork it and send your pull request. File and issue. Mention on your blog, tweet, status update. Tell your dev friends and mention when complaining to sites that have poor upload features.\r\n\r\nFlask reusability rewrite would be a welcome contribution, if you need another server backend such as for MongoDB or PHP please fork off and let me know how you get on.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}